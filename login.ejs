<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<title>ACL Example</title>
<style>
  body {
      font-family: 'Arial', sans-serif;
      background-color: #f8f9fa;
      padding: 20px;
  }

  h1 {
      text-align: center;
      margin-bottom: 20px;
  }

  .user-container {
      background-color: rgba(255, 255, 255, 0.9);
      border-radius: 10px;
      padding: 20px;
      max-height: 400px;
      overflow-y: auto;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      margin: 20px 0;
  }

  .user-item {
      padding: 10px;
      margin-bottom: 10px;
      background-color: #f8f9fa;
      border-radius: 5px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: background-color 0.3s;
  }

  .user-item:hover {
      background-color: #e9ecef;
  }
</style>
</head>
<body>
  <header class="p-3 text-bg-dark">
    <div class="container">
        <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
            <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
                <li><a href="login" class="nav-link px-2 text-secondary">Home</a></li>
                <li><a href="std" class="nav-link px-2 text-secondary">ข้อมูลนักศึกษา</a></li>
            </ul>
            <div class="text-end">
                <a href="/logout" class="btn btn-danger">Logout</a>
            </div>
        </div>
    </div>
</header>
<div class="container">
  <h1>รายชื่อนักศึกษา</h1>

  <div id="user-list" class="user-container"></div>

  <h2>Add Student</h2>
  <form action="/students" method="POST" id="user-form">
      <div class="mb-3">
          <label for="prefix_id" class="form-label">Prefix ID</label>
          <input type="number" class="form-control" id="prefix_id" name="prefix_id" required>
      </div>
      <div class="mb-3">
          <label for="first_name" class="form-label">First Name</label>
          <input type="text" class="form-control" id="first_name" name="first_name" required>
      </div>
      <div class="mb-3">
          <label for="last_name" class="form-label">Last Name</label>
          <input type="text" class="form-control" id="last_name" name="last_name" required>
      </div>
      <div class="mb-3">
          <label for="date_of_birth" class="form-label">Date of Birth</label>
          <input type="date" class="form-control" id="date_of_birth" name="date_of_birth" required>
      </div>
      <div class="mb-3">
          <label for="curriculum_id" class="form-label">Curriculum ID</label>
          <input type="number" class="form-control" id="curriculum_id" name="curriculum_id" required>
      </div>
      <div class="mb-3">
          <label for="previous_school" class="form-label">Previous School</label>
          <input type="text" class="form-control" id="previous_school" name="previous_school">
      </div>
      <div class="mb-3">
          <label for="address" class="form-label">Address</label>
          <textarea class="form-control" id="address" name="address"></textarea>
      </div>
      <div class="mb-3">
          <label for="telephone" class="form-label">Telephone</label>
          <input type="text" class="form-control" id="telephone" name="telephone">
      </div>
      <div class="mb-3">
          <label for="email" class="form-label">Email</label>
          <input type="email" class="form-control" id="email" name="email" required>
      </div>
      <div class="mb-3">
          <label for="line_id" class="form-label">Line ID</label>
          <input type="text" class="form-control" id="line_id" name="line_id">
      </div>
      <button type="submit" class="btn btn-primary">Add Student</button>
  </form>
</div>

<script>
  const userList = document.getElementById('user-list');
  const userForm = document.getElementById('user-form');

  // Fetch users and display
  async function fetchUsers() {
      const response = await fetch('/student');
      const users = await response.json();
      userList.innerHTML = '';
      users.forEach(user => {
          const userDiv = document.createElement('div');
          userDiv.classList.add('user-item');
          userDiv.innerHTML = `
              <span>${user.first_name} ${user.last_name} (${user.email})</span>
              <div class="user-actions">
                  <button onclick="updateUser(${user.id}, '${user.first_name}', '${user.email}')">Update</button>
                  <button onclick="deleteUser(${user.id})">Delete</button>
              </div>
          `;
          userList.appendChild(userDiv);
      });
  }

  // Add new user
  userForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const prefix_id = document.getElementById('prefix_id').value;
      const first_name = document.getElementById('first_name').value;
      const last_name = document.getElementById('last_name').value;
      const date_of_birth = document.getElementById('date_of_birth').value;
      const curriculum_id = document.getElementById('curriculum_id').value;
      const previous_school = document.getElementById('previous_school').value;
      const address = document.getElementById('address').value;
      const telephone = document.getElementById('telephone').value;
      const email = document.getElementById('email').value;
      const line_id = document.getElementById('line_id').value;

      await fetch('/students', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ prefix_id, first_name, last_name, date_of_birth, curriculum_id, previous_school, address, telephone, email, line_id })
      });
      fetchUsers();
      userForm.reset(); // Clear the form after submission
  });

  // Update user
  async function updateUser(id, name, email) {
      const newName = prompt('Enter new name:', name);
      const newEmail = prompt('Enter new email:', email);
      if (newName && newEmail) {
          await fetch(`/students/update/${id}`, {
              method: 'PUT',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ name: newName, email: newEmail })
          });
          fetchUsers();
      }
  }

  // Delete user
  async function deleteUser(id) {
      if (confirm('Are you sure to delete this user?')) {
          await fetch(`/students/delete/${id}`, {
              method: 'DELETE'
          });
          fetchUsers();
      }
  }

  // Initial load
  fetchUsers();
</script>
</body>
</html>